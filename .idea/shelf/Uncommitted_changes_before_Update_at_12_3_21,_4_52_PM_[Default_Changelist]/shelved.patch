Index: TeamCode/src/main/java/org/firstinspires/ftc/teamcode/HardwareAuto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.firstinspires.ftc.teamcode;\n\nimport com.qualcomm.robotcore.eventloop.opmode.Autonomous;\nimport com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;\nimport com.qualcomm.robotcore.hardware.DcMotor;\nimport com.qualcomm.robotcore.util.ElapsedTime;\n//hello\n\n@Autonomous(name = \"HardwareAuto\")\npublic class HardwareAuto extends LinearOpMode {\n\n    HardwareOmni        bot = new HardwareOmni();\n\n\n\n    double pos = 0;\n    int r = 0;\n\n    double speed = 1;\n    private ElapsedTime     runtime = new ElapsedTime();\n\n\n\n    @Override\n    public void runOpMode() throws InterruptedException {\n        bot.init(hardwareMap);\n        bot.markus.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);\n        bot.markus.setMode(DcMotor.RunMode.RUN_USING_ENCODER);\n\n\n        waitForStart();\n\n\n            //functions that control the drive motors, \n        duckdrive(speed, 4000, 0, false, 0);//for reverse 0 is  1 is backwards\n        duckdrive(speed, 8000, 1, true,0);\n        duckdrive(speed, 0, 0, true,10);\n        duckdrive(speed, 2000, 0, false,0);\n        duckdrive(speed, 2000, 1, false,0);\n\n\n\n\n\n        telemetry.addData(\"stop\",\"\");\n\n\n\n\n\n    }\n\n    private void duckdrive(double speed, int forward, int reverse, boolean duckwheel, double extrawait) {\n        bot.markus.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);\n\n        bot.markus.setMode(DcMotor.RunMode.RUN_USING_ENCODER);\n\n\n\n        if(reverse == 0) {\n            bot.markus.setTargetPosition(forward);\n        }\n        else if (reverse == 1){\n            bot.markus.setTargetPosition(forward*-1);\n        }\n\n\n\n        bot.markus.setMode(DcMotor.RunMode.RUN_TO_POSITION);\n\n\n        bot.markus.setPower(speed);\n\n        runtime.reset();\n\n        if(duckwheel){\n            bot.Arm.setPower(1);\n        }\n        else{\n            bot.Arm.setPower(0);\n        }\n\n\n        if (reverse == 0) {\n            while (pos < forward && runtime.seconds() < 10 && opModeIsActive()) {\n\n\n                pos = bot.markus.getCurrentPosition();\n                telemetry.addData(\"forward\", \"\" + pos);\n                telemetry.addData(\"time\", \"\" + runtime.seconds());\n\n\n                telemetry.update();\n\n            }\n\n\n        }\n        else if (reverse == 1){\n            while (pos > forward*-1 && runtime.seconds() < 10 && opModeIsActive()) {\n\n\n                pos = bot.markus.getCurrentPosition();\n                telemetry.addData(\"forward\", \"\" + pos);\n                telemetry.addData(\"time\", \"\" + runtime.seconds());\n\n\n                telemetry.update();\n            }\n        }\n\n        //added comment\n\n\n        if(extrawait > runtime.seconds()){\n        while(extrawait > runtime.seconds() && opModeIsActive()){\n            telemetry.addData(\"time\", runtime.seconds());\n            telemetry.update();\n                      }\n        }\n\n\n\n\n    }\n\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/HardwareAuto.java b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/HardwareAuto.java
--- a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/HardwareAuto.java	(revision 9a5712a797d8c46fadcd7813417c87330266c77c)
+++ b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/HardwareAuto.java	(date 1638571627823)
@@ -109,6 +109,13 @@
             }
         }
 
+
+        while(extrawait < runtime.seconds()){
+            telemetry.addData("time", runtime.seconds());
+            telemetry.update();
+        }
+
+
         //added comment
 
 
Index: TeamCode/src/main/java/org/firstinspires/ftc/teamcode/Wheloptel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.firstinspires.ftc.teamcode;\n\nimport com.qualcomm.robotcore.eventloop.opmode.OpMode;\nimport com.qualcomm.robotcore.eventloop.opmode.TeleOp;\nimport com.qualcomm.robotcore.hardware.DcMotor;\nimport com.qualcomm.robotcore.hardware.DcMotorSimple;\nimport com.qualcomm.robotcore.hardware.Servo;\n\n@TeleOp(name = \"Wheloptel\")\n\npublic class Wheloptel extends OpMode {\n\n    DcMotor Arm;\n    DcMotor FL;\n    DcMotor BL;\n    DcMotor BR;\n    DcMotor FR;\n    com.qualcomm.robotcore.hardware.Servo HS;\n    com.qualcomm.robotcore.hardware.Servo HSL;\n    com.qualcomm.robotcore.hardware.Servo HSR;\n    double LPower;\n    double RPower;\n    double Left;\n    double turn;\n    double slowmode = 1;\n    double Turn;\n    double Servo;\n    double up;\n    double down;\n    double pos;\n    boolean go = false;\n    @Override\n    public void init() {\n\n        //starts telemetry in the phones\n        telemetry.addData(\"Mode:\", \"done initializing\");\n        telemetry.update();\n\n//crossroads is password to control hub\n          /* Motors:\n  back_right_motor\n  front_right_motor\n  arm_motor\n  front_left_motor\n  back_left_motor\nServos:\n  hand_servo*/\n        BR = hardwareMap.dcMotor.get(\"back_right_motor\");\n        FR = hardwareMap.dcMotor.get(\"front_right_motor\");\n        Arm = hardwareMap.dcMotor.get(\"arm_motor\");\n        FL = hardwareMap.dcMotor.get(\"front_left_motor\");\n        BL = hardwareMap.dcMotor.get(\"back_left_motor\");\n        HSL = hardwareMap.servo.get(\"hand_servo_left\");\n        HSR = hardwareMap.servo.get(\"hand_servo_right\");\n        HS = hardwareMap.servo.get(\"hand_servo\");\n\n        BL.setDirection(DcMotorSimple.Direction.REVERSE);\n        FL.setDirection(DcMotorSimple.Direction.REVERSE);\n\n        BR.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);\n        FR.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);\n        Arm.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);\n        BL.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);\n        FL.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);\n\n\n      /*  pos = 1;\n        HS.setPosition(pos);\n        HSL.setPosition(0.9);\n        HSR.setPosition(0.1);\n\n*/\n        pos = HS.getPosition();\n\n    }\n\n    @Override\n    public void loop() {\n\n        HS.setPosition(pos);\n\n\n\n\n\n        if (gamepad1.right_bumper){\n            slowmode = 0.2; //slower\n        }\n        else if (gamepad1.left_bumper){\n            slowmode = 1; //normal\n        }\n\n\n        LPower = slowmode * gamepad1.left_stick_y;\n\n        Left = slowmode * gamepad1.left_stick_x;\n\n\n        RPower = slowmode * gamepad1.right_stick_y;\n\n        turn = slowmode * gamepad1.right_stick_x;\n\n\n        BL.setPower(LPower +(2 * Left) );//controls driving motors\n        FL.setPower(LPower -(2 * Left) );\n        BR.setPower(LPower -(2 * Left));\n        FR.setPower(LPower +(2 * Left));\n\n\n        if(RPower != 0 || turn != 0){\n            BL.setPower(LPower -(2 * turn) );//controls driving motors\n            FL.setPower(LPower -(2 * turn) );\n            BR.setPower(LPower +(2 * turn));\n            FR.setPower(LPower +(2 * turn));\n        }\n\n\n\n\n        up = gamepad2.right_trigger;\n        down = gamepad2.left_trigger;\n\n        Arm.setPower(up - down);\n\n\n        if(gamepad2.x){\n            HSL.setPosition(0.3); //sets the servo to closed\n            HSR.setPosition(0.3);\n\n        }\n\n        else if(gamepad2.b){\n            HSL.setPosition(-2); //sets the servo to open\n            HSR.setPosition(2);\n\n        }\n\n        //swivels claw\n        if(gamepad2.y && go){\n            pos = pos + 0.2;\n            go = false;\n        }\n\n        if(gamepad2.a && go){\n            pos = pos - 0.2;\n            go = false;\n        }\n        if (!gamepad2.a && !gamepad2.y){\n\n            if (pos > 1){\n                pos = 1;\n            }\n            else if(pos < 0){\n                pos = 0;\n            }\n\n            go = true;\n            //ends claw swivel\n        }\n\n        telemetry.addData(\"Back Left\", LPower +(2 * Left) );//displays info in phones\n        telemetry.addData(\"Front Left\",LPower -(2 * Left) );\n        telemetry.addData(\"Back Right\", LPower -(2 * Left));\n        telemetry.addData(\"Front Right\", LPower +(2 * Left));\n        telemetry.addData(\"pos\", pos);\n        telemetry.update();\n\n        //cool equation for mapping numbers just in case Y = (X-A)/(B-A) * (D-C) + C\n\n\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/Wheloptel.java b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/Wheloptel.java
--- a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/Wheloptel.java	(revision 9a5712a797d8c46fadcd7813417c87330266c77c)
+++ b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/Wheloptel.java	(date 1638571908003)
@@ -54,6 +54,10 @@
         HSR = hardwareMap.servo.get("hand_servo_right");
         HS = hardwareMap.servo.get("hand_servo");
 
+
+        Arm.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
+        Arm.setMode(DcMotor.RunMode.RUN_WITHOUT_ENCODER);
+
         BL.setDirection(DcMotorSimple.Direction.REVERSE);
         FL.setDirection(DcMotorSimple.Direction.REVERSE);
 
@@ -120,19 +124,26 @@
         up = gamepad2.right_trigger;
         down = gamepad2.left_trigger;
 
-        Arm.setPower(up - down);
+        telemetry.addData("up",up);
+        telemetry.addData("down",down);
+
+        if(gamepad2.right_trigger>0 || gamepad2.left_trigger>0)
+            if( Arm.getCurrentPosition()<=4000 && Arm.getCurrentPosition()>=0)
+                Arm.setPower(up-down);
 
+        Arm.setPower(0);
 
-        if(gamepad2.x){
-            HSL.setPosition(0.3); //sets the servo to closed
-            HSR.setPosition(0.3);
 
+        if (gamepad2.y) {
+            //arm close
+            HSR.setPosition(0.70);
+            HSL.setPosition(0.30);
         }
 
         else if(gamepad2.b){
-            HSL.setPosition(-2); //sets the servo to open
+            //arm open
+            HSL.setPosition(-2);
             HSR.setPosition(2);
-
         }
 
         //swivels claw
@@ -158,6 +169,10 @@
             //ends claw swivel
         }
 
+
+        telemetry.addData("arm motor", Arm.getCurrentPosition());
+        telemetry.addData("HSR", HSR.getPosition());
+        telemetry.addData("HSL", HSL.getPosition());
         telemetry.addData("Back Left", LPower +(2 * Left) );//displays info in phones
         telemetry.addData("Front Left",LPower -(2 * Left) );
         telemetry.addData("Back Right", LPower -(2 * Left));
